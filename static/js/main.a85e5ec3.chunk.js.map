{"version":3,"sources":["Images/SinglePole.png","Images/DoublePole.png","Images/TriplePole.png","Images/FourPole.png","Pages/Gilard.js","Pages/Home.js","Pages/Error.js","Action.js","Reducer/CartReducer.js","context/CartContext.js","Reducer/AdminReducer.js","context/AdminContext.js","Components/NavBar.js","Components/Footer.js","Modal/ToggleSwitchModal.js","Components/PageHero.js","Pages/Product.js","Pages/Cart.js","Pages/ContactUs.js","Modal/TerminalBlockModal.js","Pages/ProductTB.js","Pages/AdminLogin.js","Pages/AdminHome.js","Components/NavBarSetup.js","App.js","reportWebVitals.js","index.js"],"names":["Gilard","className","to","src","SinglePole","alt","DoublePole","TriplePole","FourPole","Home","Error","ADD_TO_CART","UPDATE_CONTACT","DELETE_CART_ITEM","SUBMIT_ITEMS","ADD_TO_CART_TB","UPDATE_LOGIN_COUNT","UPDATE_LOGIN_STATUS","Cart_Reducer","state","action","today","Date","date","getFullYear","getMonth","getDate","type","payload","id","itemName","quantity","powerRating","cart","find","i","split","join","tempCart","map","cartItem","newQuan","orderId","contactNumber","description","series","numOfWays","partNumber","tempNumber","tempId","filter","item","finalCart","initialState","localStorage","getItem","JSON","parse","totalItems","CartContext","React","createContext","CartProvider","children","useReducer","reducer","dispatch","useEffect","setItem","stringify","Provider","value","addToCart","addToCartTB","updateContact","number","deleteCartItem","submitOrder","useCartContext","useContext","AdminReducer","tempLoginCount","loginCount","tempStatus","loggedIn","AdminContext","AdminProvider","updateLoginCount","updateLoginStatus","useAdminContext","NavBar","onClick","length","Footer","ToggleSwitchModal","showModal","toogle","setMsg","useState","data","setData","validationMessage","setvalidationMessage","clearData","postData","parseInt","setTimeout","poleType","readOnly","onChange","e","target","name","amps6","amps10","amps15","amps20","PageHero","text1","text2","Product","useParams","loading","setLoading","setShowModal","msg","fetchData","a","fetch","response","json","filteredData","toggleSwitches","console","log","index","singleItem","filterItem","Cart","ContactUs","TerminalBlockModal","ProductTB","terminalBlocks","AdminLogin","username","setUsername","password","setPassword","history","useHistory","process","push","disabled","AdminHome","NavBarSetup","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a85e5ec3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SinglePole.3934edbb.png\";","export default __webpack_public_path__ + \"static/media/DoublePole.4456c47c.png\";","export default __webpack_public_path__ + \"static/media/TriplePole.aa57ec30.png\";","export default __webpack_public_path__ + \"static/media/FourPole.5eac88cc.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SinglePole from '../Images/SinglePole.png'\r\nimport DoublePole from '../Images/DoublePole.png'\r\nimport TriplePole from '../Images/TriplePole.png'\r\nimport FourPole from '../Images/FourPole.png'\r\nimport './Gilard.css';\r\n\r\nconst Gilard = () => {\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"section\">\r\n                <div className = \"main-heading\"><h2>Toggle Switchs</h2></div>\r\n                <div className=\"horiz-section\">\r\n                    <hr />\r\n                </div>\r\n                <div className=\"products-section\">\r\n                    <Link to={`/ToggleSwitch/Single Pole`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={SinglePole} alt=\"\" />\r\n                            <h4>Single Pole</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/ToggleSwitch/Double Pole`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={DoublePole} alt=\"\" />\r\n                            <h4>Double Pole</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/ToggleSwitch/Triple Pole`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={TriplePole} alt=\"\" />\r\n                            <h4>Triple Pole</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/ToggleSwitch/Four Pole`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={FourPole} alt=\"\" />\r\n                            <h4>Four Pole</h4>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"section\">\r\n                <div className=\"main-heading\">\r\n                    <h2>Terminal Blocks</h2>\r\n                </div>\r\n                <div className=\"horiz-section\">\r\n                    <hr />\r\n                </div>\r\n                <div className=\"products-section\">\r\n                    <Link to={`/TerminalBlocks/7213`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={SinglePole} alt=\"\" />\r\n                            <h4>TS</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/TerminalBlocks/7513`}>\r\n                        <div className=\"product\">\r\n                            <img className=\"product-image\" src={SinglePole} alt=\"\" />\r\n                            <h4>T/B ASSY Conductor</h4>\r\n                        </div>\r\n                    </Link> \r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Gilard;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return ( \r\n        <>  \r\n            <div className = \"main-section\">\r\n                <h1 className = \"header\">Welcome to Shreyatronics!</h1>\r\n                <h4 className = \"small-header\">We are dealers in Gilard and Sonya products</h4>\r\n                <div className = \"companies-section\">\r\n                <Link to = \"/Gilard\">\r\n                    <div className = \"company\">\r\n                        <h3 className = \"company-heading\">View Gilard Products</h3>\r\n                    </div>\r\n                </Link>\r\n                <Link to = \"/Gilard\">\r\n                    <div className = \"company\">\r\n                        <h3 className = \"company-heading\">View Sonya Products</h3>\r\n                    </div>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Error.css'\r\n\r\nconst Error = () => {\r\n    return ( \r\n        <>\r\n            <div className=\"error-section\">\r\n                <h4 className=\"error-heading\">Error Page</h4>\r\n                <Link to=\"/\">\r\n                    <button className=\"error-button\">Back to Home</button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Error;","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT'\r\nexport const DELETE_CART_ITEM = 'DELETE_CART_ITEM'\r\nexport const SUBMIT_ITEMS = 'SUBMIT_ITEMS'\r\nexport const ADD_TO_CART_TB = 'ADD_TO_CART_TB'\r\nexport const UPDATE_LOGIN_COUNT = 'UPDATE_LOGIN_COUNT'\r\nexport const UPDATE_LOGIN_STATUS = 'UPDATE_LOGIN_STATUS'","import { ADD_TO_CART, UPDATE_CONTACT, DELETE_CART_ITEM, SUBMIT_ITEMS, ADD_TO_CART_TB} from '../Action'\r\n\r\nconst Cart_Reducer = (state, action) => {\r\n\r\n    var today = new Date();\r\n    var date = today.getFullYear()+'_'+(today.getMonth()+1)+'_'+today.getDate();\r\n\r\n    if(action.type === ADD_TO_CART){\r\n        \r\n        const {id,itemName,quantity,powerRating} = action.payload\r\n        const tempItem = state.cart.find((i) => i.id === `${id}_${itemName.split(' ').join('_')}_${powerRating.split(' ').join('_')}`)\r\n\r\n        if(tempItem){\r\n            const tempCart = state.cart.map((cartItem) => {\r\n                let newQuan = cartItem.quantity + quantity\r\n                return {...cartItem, quantity : newQuan}\r\n            })\r\n            \r\n        return{\r\n            ...state,cart : tempCart\r\n        }\r\n\r\n        }else{\r\n\r\n        return{\r\n            ...state,\r\n            cart : [...state.cart,\r\n                {\r\n                id : `${id}_${itemName.split(' ').join('_')}_${powerRating.split(' ').join('_')}`,\r\n                itemName : itemName,\r\n                quantity : quantity,\r\n                powerRating : powerRating,\r\n                orderId : `${state.contactNumber}_${date}`\r\n            }]\r\n        }}\r\n    }\r\n\r\n    if(action.type === ADD_TO_CART_TB){\r\n        \r\n        const {id,description,quantity,series,numOfWays,partNumber} = action.payload\r\n        const tempItem = state.cart.find((i) => i.id === `${id}_${description.split(' ').join('_')}_${partNumber.split(' ').join('_')}`)\r\n\r\n        if(tempItem){\r\n            const tempCart = state.cart.map((cartItem) => {\r\n                let newQuan = cartItem.quantity + quantity\r\n                return {...cartItem, quantity : newQuan}\r\n            })\r\n            \r\n        return{\r\n            ...state,cart : tempCart\r\n        }\r\n\r\n        }else{\r\n\r\n        return{\r\n            ...state,\r\n            cart : [...state.cart,\r\n                {\r\n                id : `${id}_${description.split(' ').join('_')}_${partNumber.split(' ').join('_')}`,\r\n                description : description,\r\n                quantity : quantity,\r\n                series : series,\r\n                numOfWays : numOfWays,\r\n                partNumber : partNumber,\r\n                orderId : `${state.contactNumber}_${date}`\r\n            }]\r\n        }}\r\n    }\r\n\r\n    if(action.type === UPDATE_CONTACT){\r\n        \r\n        const tempNumber = action.payload\r\n        \r\n        return{\r\n            ...state,\r\n            contactNumber : tempNumber\r\n        }\r\n    }\r\n\r\n    if(action.type === DELETE_CART_ITEM){\r\n        const tempId = action.payload\r\n        const tempCart = state.cart.filter((item) => (item.id !== tempId))\r\n        return{\r\n            ...state,\r\n            cart : tempCart\r\n        }\r\n    }\r\n\r\n    if(action.type === SUBMIT_ITEMS){\r\n        const tempCart = state.cart\r\n        return{\r\n            ...state,\r\n            finalCart : tempCart\r\n        }\r\n    }\r\n\r\n    throw new Error(`${action.type} is NOT FOUND`)\r\n\r\n}\r\n\r\nexport default Cart_Reducer","import React,{useReducer, useEffect, useContext} from 'react'\r\nimport { ADD_TO_CART, UPDATE_CONTACT, DELETE_CART_ITEM, SUBMIT_ITEMS, ADD_TO_CART_TB } from '../Action'\r\nimport reducer from '../Reducer/CartReducer'\r\n\r\nconst getLocalStorage = () => {\r\n    let cart = localStorage.getItem('cart')\r\n    if(cart){\r\n        return JSON.parse(localStorage.getItem('cart'))\r\n    }else{\r\n        return []\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    cart : getLocalStorage(),\r\n    totalItems : 0,\r\n    contactNumber : null,\r\n    finalCart : []\r\n}\r\n\r\nconst CartContext = React.createContext()\r\n\r\nexport const CartProvider = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const addToCart = (id,itemName,quantity,powerRating) => {\r\n        dispatch({type : ADD_TO_CART, payload : {id,itemName,quantity,powerRating}})\r\n    }\r\n\r\n    const addToCartTB = (id,description,quantity,series,numOfWays,partNumber) => {\r\n        dispatch({type : ADD_TO_CART_TB, payload : {id,description,quantity,series,numOfWays,partNumber}})\r\n    }\r\n\r\n    const updateContact = (number) => {\r\n        dispatch({type : UPDATE_CONTACT, payload : number})\r\n    }\r\n\r\n    const deleteCartItem = (id) => {\r\n        dispatch({type : DELETE_CART_ITEM, payload : id})\r\n    }\r\n\r\n    const submitOrder = () => {\r\n        dispatch({type : SUBMIT_ITEMS})\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cart',JSON.stringify(state.cart))\r\n    }, [state.cart])\r\n\r\n    return <CartContext.Provider\r\n            value={{\r\n                ...state,\r\n                addToCart,\r\n                addToCartTB,\r\n                updateContact,\r\n                deleteCartItem,\r\n                submitOrder\r\n            }}\r\n    >{children}</CartContext.Provider>\r\n\r\n}\r\n\r\nexport const useCartContext = () => {\r\n    return useContext(CartContext)\r\n}","import {UPDATE_LOGIN_COUNT, UPDATE_LOGIN_STATUS} from '../Action'\r\n\r\nconst AdminReducer = (state,action) => {\r\n    \r\n    if(action.type === UPDATE_LOGIN_COUNT){\r\n        const tempLoginCount = state.loginCount\r\n        return{\r\n            ...state,\r\n            loginCount : tempLoginCount + 1\r\n        }\r\n    }\r\n\r\n    if(action.type === UPDATE_LOGIN_STATUS){\r\n        const tempStatus = state.loggedIn\r\n        return{\r\n            ...state,\r\n            loggedIn : !tempStatus,\r\n            loginCount : 0\r\n        }\r\n    }\r\n\r\n    throw new Error (`${action.type} is NOT FOUND`)\r\n}\r\n \r\nexport default AdminReducer;","import React,{useReducer, useContext} from 'react'\r\nimport reducer from '../Reducer/AdminReducer'\r\nimport {UPDATE_LOGIN_COUNT, UPDATE_LOGIN_STATUS} from '../Action'\r\n\r\nconst getLoginCount = () => {\r\n    let count = localStorage.getItem('loginCount')\r\n    if(count){\r\n        return JSON.parse(localStorage.getItem('loginCount')) + 1\r\n    }\r\n    else{\r\n        return 0\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    loginCount : getLoginCount(),\r\n    loggedIn : false\r\n}\r\n\r\nconst AdminContext = React.createContext()\r\n\r\nexport const AdminProvider = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const updateLoginCount = () => {\r\n        dispatch({type : UPDATE_LOGIN_COUNT})\r\n        localStorage.setItem('loginCount',JSON.stringify(state.loginCount))\r\n    }\r\n\r\n    const updateLoginStatus = () => {\r\n        dispatch({type : UPDATE_LOGIN_STATUS})\r\n    }\r\n\r\n    return <AdminContext.Provider\r\n        value ={{\r\n            ...state,\r\n            updateLoginCount,\r\n            updateLoginStatus\r\n        }}\r\n    >{children}</AdminContext.Provider>\r\n\r\n}\r\n\r\nexport const useAdminContext = () => {\r\n    return useContext(AdminContext)\r\n}","import './NavBar.css';\r\nimport {Link} from 'react-router-dom'\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport { useAdminContext } from '../context/AdminContext';\r\n\r\nconst NavBar = () => {\r\n\r\n    const {cart} = useCartContext()\r\n    const { loggedIn } = useAdminContext()\r\n    const { updateLoginStatus } = useAdminContext()\r\n\r\n    return ( \r\n        <nav>\r\n            <div className =\"main-navbar\">\r\n                <Link \r\n                    to=\"/\" \r\n                    onClick={() => updateLoginStatus()} \r\n                    className=\"main-header\">\r\n                    <h1 className =\"main-header\">Shreyatronics</h1>\r\n                </Link>\r\n                <Link \r\n                    to=\"/Cart\" \r\n                    onClick={() => updateLoginStatus()} \r\n                    className=\"main-header-cart\">\r\n                    <h4 className =\"main-header-cart\">Cart</h4>\r\n                    {cart.length !== 0 && <h4 className =\"main-header-cart-length\">({cart.length})</h4>}\r\n                </Link>\r\n                <Link \r\n                    to=\"/ContactUs\" \r\n                    onClick={() => updateLoginStatus()} \r\n                    className=\"main-header-contact\">\r\n                    <h4 className =\"main-header-contact\">Contact Us</h4>\r\n                </Link>\r\n                {loggedIn && \r\n                    <Link \r\n                        to=\"/Admin\" \r\n                        onClick={() => updateLoginStatus()} \r\n                        className=\"main-header-contact\">\r\n                        <h4 className =\"main-header-contact\">Logout</h4>\r\n                        </Link>\r\n                    }\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","const Footer = () => {\r\n    return ( \r\n        <footer>\r\n            <div className =\"main-footer\">\r\n                <h5 className =\"footer-text\">&copy; All rights Reserved {new Date().getFullYear()}</h5>\r\n                <h5 className =\"footer-text\">Shreyatronics</h5>\r\n            </div>\r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, {useState} from \"react\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport './ToggleSwitchModal.css';\r\n\r\nconst ToggleSwitchModal = ({showModal,toogle,item,setMsg}) => {\r\n\r\n    const {addToCart, contactNumber, updateContact} = useCartContext()\r\n\r\n    const [data, setData] = useState({\r\n        itemName : \"\",\r\n        quantity : 0,\r\n        powerRating : \"\"\r\n    })\r\n    const [validationMessage, setvalidationMessage] = useState(\"\")\r\n\r\n    const validateData = () => {\r\n        if(data.powerRating === \"\" || data.powerRating === \"-- Select Here --\"){\r\n            setvalidationMessage(\"Select Power Rating\")\r\n            return true\r\n        }\r\n        if(data.quantity === 0){\r\n            setvalidationMessage(\"Quantity is Required\")\r\n            return true\r\n        }\r\n        if(data.quantity < 0 || data.quantity === 'e'){\r\n            setvalidationMessage(\"Quantity should be greater then Zero\")\r\n            return true\r\n        }\r\n        if(contactNumber === null || contactNumber.length !== 10){\r\n            setvalidationMessage(\"Contact Number Not Valid\")\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const clearData = () => {\r\n        setData({\r\n            id : null,\r\n            itemName : \"\",\r\n            quantity : 0,\r\n            powerRating : \"\"\r\n        })\r\n        setvalidationMessage(\"\")\r\n    }\r\n\r\n    const postData = () => {\r\n        const validation = validateData()\r\n        if(validation === false){\r\n            toogle()\r\n            addToCart(data.id,data.itemName,parseInt(data.quantity),data.powerRating)\r\n            clearData()\r\n            setMsg(\"Items added to Cart\")\r\n            setTimeout(() => {\r\n                setMsg(\"\")\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        showModal ?\r\n        <div className=\"ts-modal-background\"> \r\n            <div className=\"ts-modal\">\r\n                <div className=\"ts-modal-header\">\r\n                    <h4>Toogle Switch - {item.poleType}</h4>\r\n                </div>\r\n                <div className=\"ts-modal-validation\">\r\n                    <h4>{validationMessage}</h4>\r\n                </div>\r\n                <div className=\"ts-modal-content\"> \r\n                    <div className=\"ts-modal-desc\">\r\n                        <label className=\"ts-modal-label\">Name : </label>\r\n                        <input type=\"text\" value={item.description} readOnly = {true} className=\"ts-modal-input\" />\r\n                    </div>\r\n                    <div className=\"ts-modal-quan\">\r\n                        <label className=\"ts-modal-label\">Quantity : </label>\r\n                        <input  className=\"ts-modal-input\" type=\"number\" onChange = {(e) => {\r\n                            setData({...data, quantity : e.target.value, itemName : item.description, id : item.id})\r\n                            setvalidationMessage(\"\")\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"ts-modal-power\">\r\n                        <label className=\"ts-modal-label\">Power Rating : </label>\r\n                        <select  className=\"ts-modal-input\" name=\"\" id=\"\" onChange = {(e) => {\r\n                                setData({...data, powerRating : e.target.value})\r\n                                setvalidationMessage(\"\")\r\n                            }}>\r\n                            <option>-- Select Here --</option>\r\n                            <option value={`amps6 - ${item.amps6}`}>{`amps6 - ${item.amps6}`}</option>\r\n                            <option value={`amps10 - ${item.amps10}`}>{`amps10 - ${item.amps10}`}</option>\r\n                            <option value={`amps15 - ${item.amps15}`}>{`amps15 - ${item.amps15}`}</option>\r\n                            <option value={`amps20 - ${item.amps20}`}>{`amps20 - ${item.amps20}`}</option>\r\n                        </select>\r\n                    </div> \r\n                    <div className=\"ts-modal-quan\">\r\n                        <label className=\"ts-modal-label\">Phone Number : </label>\r\n                        <input  className=\"ts-modal-input\" type=\"number\" value={contactNumber} onChange = {(e) => {\r\n                            updateContact(e.target.value)\r\n                        }} />\r\n                    </div>   \r\n                </div>\r\n                <div  className=\"ts-modal-footer\">\r\n                    <button className=\"ts-modal-cart\" onClick={() => {\r\n                        postData()\r\n                    }}>Add to Cart</button>\r\n                    <button className=\"ts-modal-cancel\" onClick={() => {\r\n                        toogle()\r\n                        clearData()\r\n                    }}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div> : null\r\n     );\r\n}\r\n \r\nexport default ToggleSwitchModal;","import {Link} from 'react-router-dom';\r\nimport './PageHero.css'\r\n\r\nconst PageHero = ({text1, text2}) => {\r\n    return ( \r\n        <div className=\"main-page-hero\">\r\n            <h4 className=\"page-hero-heading\">\r\n                <Link to=\"/\" className=\"page-hero-heading\">\r\n                    Home / \r\n                </Link>\r\n                <Link to = {`/${text1}`} className=\"page-hero-heading\">\r\n                    {` ${text1} `}\r\n                </Link>\r\n                {text2 && <>/ {text2}</>}\r\n            </h4>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PageHero;","import React,{useEffect, useState} from \"react\" ;\r\nimport {useParams} from 'react-router-dom';\r\nimport './Product.css';\r\nimport ToggleSwitchModal from \"../Modal/ToggleSwitchModal\";\r\nimport PageHero from \"../Components/PageHero\";\r\n\r\nconst Product = () => {\r\n\r\n    const {name} = useParams()\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [item, setItem] = useState([])\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    const toogle = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    const fetchData = async () => {\r\n\r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch('https://shreyatronics.herokuapp.com/api/public/gilard')\r\n            const data = await response.json()\r\n            const filteredData = data.toggleSwitches.filter(item => {\r\n                return item.poleType === name\r\n            })\r\n            setData(filteredData)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const filterItem = (id) => {\r\n        const singleItem = data.filter(item => {\r\n            return item.id === id\r\n        })\r\n        setItem(singleItem[0])\r\n    }\r\n    \r\n    if(loading){\r\n        return(\r\n            <div className = \"table-section\">\r\n                <h3>Products Loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <PageHero text1 = \"Gilard\" text2 = {name} />\r\n        <div className=\"message-section\">\r\n            <h3 className=\"message-header\">{msg}</h3>\r\n        </div> \r\n        <div className = \"table-section\">\r\n            <table className = \"table\">\r\n                <thead className = \"thead\">\r\n                    <tr>\r\n                      <th>Description</th>\r\n                      <th>Pole Type</th>\r\n                      <th>6 Amps</th>\r\n                      <th>10 Amps</th>\r\n                      <th>15 Amps</th>\r\n                      <th>20 Amps</th>\r\n                      <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    data.map((item,index) => (\r\n                        <tbody>\r\n                            <tr key = {index} className={`tr-${index}`}>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.poleType}</td>\r\n                                <td>{item.amps6}</td>\r\n                                <td>{item.amps10}</td>\r\n                                <td>{item.amps15}</td>\r\n                                <td>{item.amps20}</td>\r\n                                <td className=\"button-section\">\r\n                                    <button \r\n                                        className =\"add-button\"\r\n                                        onClick = {() =>{\r\n                                            toogle()\r\n                                            filterItem(item.id)\r\n                                            }}\r\n                                    >Add to Cart</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    ))\r\n                }\r\n                <ToggleSwitchModal \r\n                    showModal = {showModal}\r\n                    toogle = {toogle}\r\n                    item = {item}\r\n                    setMsg = {setMsg}    \r\n                ></ToggleSwitchModal>\r\n            </table>    \r\n        </div>\r\n    </>\r\n    );\r\n}\r\n \r\nexport default Product;","import React from \"react\";\r\nimport PageHero from \"../Components/PageHero\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport './Cart.css'\r\n\r\nconst Cart = () => {\r\n\r\n    const {cart, deleteCartItem, submitOrder} = useCartContext()\r\n\r\n    if(cart.length === 0){\r\n        return <div className=\"empty-cart\">\r\n                <h4 className=\"empty-cart-header\">Cart is Empty</h4>\r\n               </div>\r\n            }\r\n\r\n    return ( \r\n        <div>\r\n           <PageHero text1=\"Cart\" />\r\n           <div className=\"cart-section\">\r\n               <table className = \"table\">\r\n                   <thead className = \"thead\">\r\n                       <tr>\r\n                           <th>Item Name</th>\r\n                           <th>Quantity</th>\r\n                           <th></th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           cart.map((item,index) => {\r\n                               return <tr key={index} className={`tr-${index}`} >\r\n                                   <td>\r\n                                       {item.itemName && <p className=\"item-desc\">{item.itemName}</p>}\r\n                                       {item.powerRating && <p className=\"item-desc\">Power Rating : {item.powerRating}</p>}\r\n                                       {item.description && <p className=\"item-desc\">{item.description}</p>}\r\n                                       {item.series && <p className=\"item-desc\">Series : {item.series}</p>}\r\n                                       {item.numOfWays && <p className=\"item-desc\">Number of ways : {item.numOfWays}</p>}\r\n                                       {item.partNumber && <p className=\"item-desc\">Part Number : {item.partNumber}</p>} \r\n                                    </td>\r\n                                   <td>{item.quantity}</td>\r\n                                   <td><button \r\n                                            onClick={() => {deleteCartItem(item.id)}}\r\n                                            className =\"delete-button\"\r\n                                    >Delete</button></td>\r\n                               </tr>\r\n                           })\r\n                       }\r\n                   </tbody>\r\n               </table>\r\n               <div className=\"submit-section\">\r\n                       <button className=\"submit-btn\" onClick = {() => submitOrder()}>Submit Order</button>\r\n               </div>\r\n           </div> \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Cart;","import React from \"react\";\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <div>\r\n            Contact Us \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import React, {useState} from \"react\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport './TerminalBlockModal.css';\r\n\r\nconst TerminalBlockModal = ({showModal,toogle,item,setMsg}) => {\r\n\r\n    const {addToCartTB, contactNumber, updateContact} = useCartContext()\r\n\r\n    const [data, setData] = useState({\r\n        quantity : 0,\r\n        description : \"\",\r\n        series : \"\",\r\n        numOfWays : 0,\r\n        partNumber: \"\"\r\n    })\r\n\r\n    const [validationMessage, setvalidationMessage] = useState(\"\")\r\n\r\n    const validateData = () => {\r\n        if(data.quantity === 0){\r\n            setvalidationMessage(\"Quantity is Required\")\r\n            return true\r\n        }\r\n        if(data.quantity < 0 || data.quantity === 'e'){\r\n            setvalidationMessage(\"Quantity should be greater then Zero\")\r\n            return true\r\n        }\r\n        if(contactNumber === null || contactNumber.length !== 10){\r\n            setvalidationMessage(\"Contact Number Not Valid\")\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const clearData = () => {\r\n        setData({\r\n            id : null,\r\n            quantity : 0,\r\n            description : \"\",\r\n            series : \"\",\r\n            numOfWays : 0,\r\n            partNumber: \"\"\r\n        })\r\n        setvalidationMessage(\"\")\r\n    }\r\n    \r\n    const postData = () => {\r\n        const validation = validateData()\r\n        if(validation === false){\r\n            addToCartTB(data.id,\r\n                      data.description,\r\n                      parseInt(data.quantity),\r\n                      data.series,\r\n                      data.numOfWays,\r\n                      data.partNumber\r\n                    )\r\n            toogle()\r\n            clearData()\r\n            setMsg(\"Items added to Cart\")\r\n            setTimeout(() => {\r\n                setMsg(\"\")\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        showModal ?\r\n        <div className=\"ts-modal-background\"> \r\n            <div className=\"ts-modal\">\r\n                <div className=\"ts-modal-header\">\r\n                    <h4>Toogle Switch - {item.description}</h4>\r\n                </div>\r\n                <div className=\"ts-modal-validation\">\r\n                    <h4>{validationMessage}</h4>\r\n                </div>\r\n                <div className=\"ts-modal-content\"> \r\n                    <div className=\"ts-modal-desc\">\r\n                        <label className=\"ts-modal-label\">Name : </label>\r\n                        <input type=\"text\" value={item.description} readOnly = {true} className=\"ts-modal-input\" />\r\n                    </div>\r\n                    <div className=\"ts-modal-desc\">\r\n                        <label className=\"ts-modal-label\">Series : </label>\r\n                        <input type=\"text\" value={item.series} readOnly = {true} className=\"ts-modal-input\" />\r\n                    </div>\r\n                    <div className=\"ts-modal-desc\">\r\n                        <label className=\"ts-modal-label\">Num of ways : </label>\r\n                        <input type=\"text\" value={item.numOfWays} readOnly = {true} className=\"ts-modal-input\" />\r\n                    </div>\r\n                    <div className=\"ts-modal-desc\">\r\n                        <label className=\"ts-modal-label\">Part Number : </label>\r\n                        <input type=\"text\" value={item.partNumber} readOnly = {true} className=\"ts-modal-input\" />\r\n                    </div>\r\n                    <div className=\"ts-modal-quan\">\r\n                        <label className=\"ts-modal-label\">Quantity : </label>\r\n                        <input  className=\"ts-modal-input\" type=\"number\" onChange = {(e) => {\r\n                            setData({...data, \r\n                                        quantity : e.target.value, \r\n                                        description : item.description,\r\n                                        series : item.series,\r\n                                        numOfWays : item.numOfWays,\r\n                                        partNumber : item.partNumber, \r\n                                        id : item.id\r\n                            })\r\n                            setvalidationMessage(\"\")\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"ts-modal-quan\">\r\n                        <label className=\"ts-modal-label\">Phone Number : </label>\r\n                        <input  className=\"ts-modal-input\" type=\"number\" value={contactNumber} onChange = {(e) => {\r\n                            updateContact(e.target.value)\r\n                        }} />\r\n                    </div>   \r\n                </div>\r\n                <div  className=\"ts-modal-footer\">\r\n                    <button className=\"ts-modal-cart\" onClick={() => {\r\n                        postData()\r\n                    }}>Add to Cart</button>\r\n                    <button className=\"ts-modal-cancel\" onClick={() => {\r\n                        toogle()\r\n                        clearData()\r\n                    }}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div> : null\r\n     );\r\n}\r\n \r\nexport default TerminalBlockModal;","import React,{useEffect, useState} from \"react\" ;\r\nimport {useParams} from 'react-router-dom';\r\nimport './Product.css';\r\nimport TerminalBlockModal from \"../Modal/TerminalBlockModal\";\r\nimport PageHero from \"../Components/PageHero\";\r\n\r\nconst ProductTB = () => {\r\n\r\n    const {name} = useParams()\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [item, setItem] = useState([])\r\n    const [msg, setMsg] = useState(\"\")\r\n\r\n    const toogle = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    const fetchData = async () => {\r\n\r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch('https://shreyatronics.herokuapp.com/api/public/gilard')\r\n            const data = await response.json()\r\n            const filteredData = data.terminalBlocks.filter(item => {\r\n                return item.series === name\r\n            })\r\n            setData(filteredData)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const filterItem = (id) => {\r\n        const singleItem = data.filter(item => {\r\n            return item.id === id\r\n        })\r\n        setItem(singleItem[0])\r\n    }\r\n    \r\n    if(loading){\r\n        return(\r\n            <div className = \"table-section\">\r\n                <h3>Products Loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <PageHero text1 = \"Gilard\" />\r\n        <div className=\"message-section\">\r\n            <h3 className=\"message-header\">{msg}</h3>\r\n        </div> \r\n        <div className = \"table-section\">\r\n            <table className = \"table\">\r\n                <thead className = \"thead\">\r\n                    <tr>\r\n                      <th>Description</th>\r\n                      <th>Series</th>\r\n                      <th>Number of Ways</th>\r\n                      <th>Part Number</th>\r\n                      <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    data.map((item,index) => (\r\n                        <tbody>\r\n                            <tr key = {index} className={`tr-${index}`}>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.series}</td>\r\n                                <td>{item.numOfWays}</td>\r\n                                <td>{item.partNumber}</td>\r\n                                <td className=\"button-section\">\r\n                                    <button \r\n                                        className =\"add-button\"\r\n                                        onClick = {() =>{\r\n                                            toogle()\r\n                                            filterItem(item.id)\r\n                                            }}\r\n                                    >Add to Cart</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    ))\r\n                }\r\n                <TerminalBlockModal \r\n                    showModal = {showModal}\r\n                    toogle = {toogle}\r\n                    item = {item}\r\n                    setMsg = {setMsg}    \r\n                ></TerminalBlockModal>\r\n            </table>    \r\n        </div>  \r\n        </>\r\n     );\r\n}\r\n \r\nexport default ProductTB;","import './AdminLogin.css'\r\nimport { useAdminContext } from '../context/AdminContext';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const {updateLoginCount, loginCount, updateLoginStatus} = useAdminContext()\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const loginHandler = () => {\r\n        if(process.env.REACT_APP_USER_NAME === username && process.env.REACT_APP_PASSWORD === password){\r\n            history.push('/Admin/Home')\r\n            updateLoginStatus()\r\n        }else{\r\n            updateLoginCount()\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <section className=\"login-section\">\r\n            <div className=\"login-main-section\">\r\n                <div className=\"login-message-section\">\r\n                    {loginCount >= 3 && <p>{`Account is blocked, please try later`}</p>}\r\n                    {loginCount !== 0 && loginCount <= 2 && <p>{`Username and Password is wrong, login attemps left is ${3 - loginCount}`}</p>}\r\n                </div>\r\n                <div className=\"login-main-header\">\r\n                    <h2>Admin Login</h2>\r\n                </div>\r\n                <div className=\"main-input-section\">\r\n                    <label className=\"input-label-section\">User Name : </label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"input-section\" \r\n                        value={username} \r\n                        onChange={(e) => setUsername(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"main-input-section\">\r\n                    <label className=\"input-label-section\">Password : </label>\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        id=\"password\" \r\n                        className=\"input-section\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"login-button-section\">\r\n                    <button \r\n                        className=\"login-button\" \r\n                        onClick = {() => loginHandler()}\r\n                        disabled = {loginCount === 3 ? true : false}\r\n                    >Login</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n     );\r\n}\r\n\r\nexport default AdminLogin;","import { useAdminContext } from '../context/AdminContext';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AdminHome = () => {\r\n\r\n    const { loggedIn } = useAdminContext()\r\n    const history = useHistory()\r\n\r\n    if(!loggedIn){\r\n        history.push('./')\r\n    }\r\n\r\n    return ( \r\n        <h2>Admin Home</h2>\r\n     );\r\n}\r\n \r\nexport default AdminHome;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Gilard from '../Pages/Gilard';\r\nimport Home from '../Pages/Home';\r\nimport Error from '../Pages/Error';\r\nimport NavBar from './NavBar';\r\nimport Footer from './Footer';\r\nimport Product from '../Pages/Product';\r\nimport Cart from '../Pages/Cart';\r\nimport ContactUs from '../Pages/ContactUs';\r\nimport ProductTB from '../Pages/ProductTB';\r\nimport AdminLogin from '../Pages/AdminLogin';\r\nimport AdminHome from '../Pages/AdminHome';\r\n\r\nconst NavBarSetup = () => {\r\n    return ( \r\n        <Router>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path = \"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path = \"/Gilard\">\r\n                    <Gilard />\r\n                </Route>\r\n                <Route exact path = \"/ToggleSwitch/:name\" children = {<Product />}>\r\n                </Route>\r\n                <Route exact path = \"/TerminalBlocks/:name\" children = {<ProductTB />}>\r\n                </Route>\r\n                <Route exact path = \"/Cart\">\r\n                    <Cart />\r\n                </Route>\r\n                <Route exact path = \"/Admin\">\r\n                    <AdminLogin />\r\n                </Route>\r\n                <Route exact path = \"/Admin/Home\">\r\n                    <AdminHome />\r\n                </Route>\r\n                <Route exact path = \"/ContactUs\">\r\n                    <ContactUs />\r\n                </Route>\r\n                <Route exact path = \"*\">\r\n                    <Error />\r\n                </Route>\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n     );\r\n}\r\n \r\nexport default NavBarSetup;","import './App.css';\n//import Home from './Pages/Home'\nimport NavBarSetup from './Components/NavBarSetup';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBarSetup />\n      {/* <Home /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CartProvider } from './context/CartContext';\nimport reportWebVitals from './reportWebVitals';\nimport { AdminProvider } from './context/AdminContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartProvider>\n      <AdminProvider>\n        <App />\n      </AdminProvider>\n    </CartProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}